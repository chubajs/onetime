import React from 'react';
import { AlertCircle, Lightbulb, FileText } from 'lucide-react';

const colors = [
  'bg-blue-50', 'bg-green-50', 'bg-yellow-50', 'bg-pink-50', 
  'bg-purple-50', 'bg-indigo-50', 'bg-red-50', 'bg-orange-50'
];

const Section = ({ title, content, colorClass, heightClass }) => (
  <div className={`border border-black shadow-sm mb-4 ${colorClass} flex flex-col rounded overflow-hidden`} style={{height: heightClass}}>
    <h2 className="text-sm font-semibold text-white bg-gray-800 p-2 border-b border-black">{title}</h2>
    <div className="p-3 flex-1 overflow-auto">
      {content && typeof content === 'object' ? 
        Object.entries(content).map(([key, value]) => (
          <div key={key} className="mb-2 flex items-start text-xs">
            {key === 'проблема' && <AlertCircle className="text-red-500 mr-1 flex-shrink-0 mt-0.5" size={14} />}
            {key === 'решение' && <Lightbulb className="text-yellow-500 mr-1 flex-shrink-0 mt-0.5" size={14} />}
            {key === 'пример' && <FileText className="text-blue-500 mr-1 flex-shrink-0 mt-0.5" size={14} />}
            <span className="text-gray-700">{value}</span>
          </div>
        ))
      : <p className="text-gray-700">Нет данных</p>}
    </div>
  </div>
);


const CheatSheet = () => {
  const sections = [
    {
      title: "Ограниченное понимание контекста",
      content: {
        проблема: "ИИ может не учитывать культурные различия при ответе на запросы. Например, не понимает местные обычаи или социальные нормы в разных странах.",
        решение: "Предоставляйте детализированные запросы, учитывающие культурный контекст и специфику региона.",
        пример: 'Вместо "Расскажи о маркетинге" спросите "Как применяются современные цифровые стратегии в B2B маркетинге в Японии, учитывая их культурные особенности и отношение к технологиям?"'
      }
    },
    {
      title: "Сложности с поддержанием стиля",
      content: {
        проблема: "ИИ может не придерживаться заданного стиля на протяжении всего текста. Это особенно заметно при генерации длинных материалов.",
        решение: "Предоставляйте примеры стиля и напоминайте о нем в процессе общения.",
        пример: 'Скажите: "Пожалуйста, продолжай писать в стиле Марка Твена, как в начале текста." Такие конкретные указания помогут ИИ сфокусироваться на поддержании нужного стиля и тона повествования."'
      }
    },
    {
      title: "Повторяемость ответов",
      content: {
        проблема: "На одни и те же запросы AI может давать схожие ответы, не предлагая новых перспектив.",
        решение: "Требуйте разнообразия и стремитесь к нестандартным идеям.",
        пример: 'Попросите AI привести несколько различных примеров или сценариев на одну тему, например: "Предложи три уникальных подхода к решению проблемы перенаселения городов, каждый из которых основан на разных технологиях или стратегиях."'
      }
    },
    {
      title: "Непоследовательность в тоне",
      content: {
        проблема: "ИИ может неожиданно менять стиль общения в рамках одного диалога.",
        решение: "Указывайте желаемый тон и стиль общения в начале разговора.",
        пример: 'Уточните: "Пожалуйста, отвечай в формальном стиле научной статьи на протяжении всего нашего разговора."'
      }
    },
    {
      title: "Фактические неточности",
      content: {
        проблема: "ИИ может случайно предоставить неверную информацию или перепутать факты.",
        решение: "Проверяйте важную информацию по нескольким авторитетным источникам.",
        пример: 'После получения ответа от ИИ, уточните: "Можешь ли ты предоставить источники для этой информации? Я хотел бы проверить эти факты." Также полезно пересмотреть данные и убедиться, что они актуальны и соответствуют контексту. Важно регулярно обновлять знания и информацию, чтобы избежать распространения устаревших или некорректных данных.'
      }
    },
    {
      title: "Сложности с восприятием нюансов",
      content: {
        проблема: "ИИ может не уловить скрытый подтекст в политическом обсуждении, трактуя всё буквально, что может привести к неполному или неточному анализу ситуации.",
        решение: "Уточняйте культурные, социальные и отраслевые детали, а также просите AI учитывать контекст и возможные подтексты.",
        пример: 'При обсуждении политической ситуации уточните: "Проанализируй текущую политическую ситуацию в стране X, учитывая исторический контекст, неявные намеки в высказываниях политиков и возможные скрытые мотивы основных политических игроков."'
      }
    },
    {
      title: "Чрезмерное обобщение",
      content: {
        проблема: "Ответы могут быть слишком общими. Например, при обсуждении глобального потепления ИИ может привести общие факты, не вдаваясь в детали, касающиеся конкретного региона или отрасли.",
        решение: "Сужайте фокус обсуждения и запрашивайте конкретные данные, относящиеся к определенному региону, временному периоду или отрасли.",
        пример: 'Вместо "Расскажи о глобальном потеплении" спросите "Как глобальное потепление повлияло на урожайность пшеницы в Центральной Европе за последние 10 лет? Приведи конкретные данные и тенденции."'
      }
    },
    {
      title: "Ограниченные творческие возможности",
      content: {
        проблема: "Ответы могут быть слишком предсказуемыми и неоригинальными, не предлагая новых идей или подходов.",
        решение: "Ставьте задачи на креативность и просите AI придумать уникальные сценарии.",
        пример: 'Попросите AI придумать уникальный сценарий, например, "Представь, как будет выглядеть мир через 100 лет, если искусственный интеллект станет доминирующей формой разума."'
      }
    },
    {
      title: "Недостаток актуальной информации",
      content: {
        проблема: "ИИ может использовать устаревшие данные в своих ответах.",
        решение: "Уточняйте временные рамки и просите ИИ ссылаться на самые свежие данные.",
        пример: 'Уточните: "Пожалуйста, используй только информацию за последний год при ответе на этот вопрос."'
      }
    },
    {
      title: "Неспособность к самокоррекции",
      content: {
        проблема: "ИИ может повторять ошибку, даже если на нее указали.",
        решение: "Явно указывайте на ошибки и просите ИИ пересмотреть свой подход.",
        пример: 'Скажите: "В предыдущем ответе была ошибка в дате. Пожалуйста, перепроверь информацию и дай корректный ответ."'
      }
    },
    {
      title: "Ограниченные специализированные знания",
      content: {
        проблема: "ИИ может не иметь глубоких знаний в узкоспециализированных областях.",
        решение: "Комбинируйте ответы ИИ с экспертными знаниями из авторитетных источников.",
        пример: 'Попросите: "Сравни свой ответ с последними исследованиями в этой области, опубликованными в научных журналах."'
      }
    },
    {
      title: "Упрощённые объяснения",
      content: {
        проблема: "ИИ может давать слишком поверхностные объяснения сложных концепций.",
        решение: "Поощряйте глубокий анализ, запрашивайте детали и примеры.",
        пример: 'Спросите: "Какова роль квантовой физики в современных вычислительных технологиях? Приведи конкретные примеры применения."'
      }
    }
  ];

// Распределение секций по высотам
const bigSections = [sections[0], sections[5], sections[4]]; // Большие секции
const mediumSections = [sections[1], sections[6], sections[2]]; // Средние секции
const smallSections = [sections[3], sections[7], sections[8], sections[9], sections[10], sections[11]]; // Маленькие секции

  // Распределение по столбцам с скорректированными высотами
  const column1 = [
    { section: bigSections[0], height: '240px' },  // +14px
    { section: smallSections[0], height: '185px' }, // -14px
    { section: mediumSections[0], height: '229px' },
    { section: smallSections[1], height: '224px' },
  ];

  const column2 = [
    { section: smallSections[2], height: '180px' }, // -8px
    { section: mediumSections[1], height: '250px' },
    { section: bigSections[1], height: '270px' },  // +14px
    { section: smallSections[3], height: '178px' }, // -6px
  ];

  const column3 = [
    { section: smallSections[4], height: '190px' }, // -4px
    { section: bigSections[2], height: '270px' },  // +14px
    { section: smallSections[5], height: '190px' }, // -10px
    { section: mediumSections[2], height: '228px' },
  ];

  return (
    <div className="min-h-screen bg-gray-100 p-4">
      <div className="max-w-7xl mx-auto bg-white p-6 border border-black">
        <h1 className="text-2xl font-bold text-center mb-6 text-gray-800 border-b-2 border-gray-200 pb-4">
          Шпаргалка: Проблемы взаимодействия с ИИ и их решения
        </h1>
        <div className="flex flex-col md:flex-row items-stretch">
          <div className="w-full md:w-1/3 md:pr-2 flex flex-col">
            {column1.map(({ section, height }, index) => (
              <Section 
                key={index} 
                title={section.title} 
                content={section.content} 
                colorClass={colors[index % colors.length]} 
                heightClass={height} 
              />
            ))}
          </div>
          <div className="w-full md:w-1/3 md:px-2 flex flex-col">
            {column2.map(({ section, height }, index) => (
              <Section 
                key={index + 4} 
                title={section.title} 
                content={section.content} 
                colorClass={colors[(index + 4) % colors.length]} 
                heightClass={height} 
              />
            ))}
          </div>
          <div className="w-full md:w-1/3 md:pl-2 flex flex-col">
            {column3.map(({ section, height }, index) => (
              <Section 
                key={index + 8} 
                title={section.title} 
                content={section.content} 
                colorClass={colors[(index + 8) % colors.length]} 
                heightClass={height} 
              />
            ))}
          </div>
        </div>
        <div className="mt-6 text-center text-xs text-gray-600">
          <a href="https://t.me/sergiobulaev/" target="_blank" rel="noopener noreferrer" className="font-bold hover:text-blue-600 transition-colors">
            Сергей Булаев AI 🤖
          </a>
          {" - об AI и не только "}
          <span className="text-gray-500">(@sergiobulaev)</span>
        </div>
      </div>
    </div>
  );
};

export default CheatSheet;